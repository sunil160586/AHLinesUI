{"remainingRequest":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\AHLinesUI\\node_modules\\ngx-accordion\\AccordionGroup.js","dependencies":[{"path":"D:\\AHLinesUI\\node_modules\\ngx-accordion\\AccordionGroup.js","mtime":1484732609000},{"path":"D:\\AHLinesUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522837491125},{"path":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nvar __param = /*@__PURE__*/ require(\"tslib\").__param;\nvar core_1 = require(\"@angular/core\");\nvar Accordion_1 = require(\"./Accordion\");\nvar AccordionToggle_1 = require(\"./AccordionToggle\");\nvar AccordionGroup = /*@__PURE__*/ (function () {\n    function AccordionGroup(accordion, cdr) {\n        this.accordion = accordion;\n        this.cdr = cdr;\n        this.isOpened = false;\n        this.onOpen = new core_1.EventEmitter();\n        this.onClose = new core_1.EventEmitter();\n        this.onToggle = new core_1.EventEmitter();\n        this.disabled = false;\n    }\n    AccordionGroup.prototype.checkAndToggle = function () {\n        // if custom toggle element is supplied, then do nothing, custom toggler will take care of it\n        if (this.toggler)\n            return;\n        this.toggle();\n    };\n    AccordionGroup.prototype.toggle = function () {\n        if (this.disabled)\n            return;\n        var isOpenedBeforeWeChange = this.isOpened;\n        if (this.accordion.closeOthers)\n            this.accordion.closeAll();\n        this.isOpened = !isOpenedBeforeWeChange;\n        if (this.isOpened) {\n            this.onOpen.emit();\n        }\n        else {\n            this.onClose.emit();\n        }\n        this.onToggle.emit(this.isOpened);\n    };\n    AccordionGroup.prototype.openOnInitialization = function () {\n        this.isOpened = true;\n        this.cdr.detectChanges();\n    };\n    return AccordionGroup;\n}());\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", String)\n], AccordionGroup.prototype, \"heading\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], AccordionGroup.prototype, \"isOpened\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], AccordionGroup.prototype, \"onOpen\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], AccordionGroup.prototype, \"onClose\", void 0);\n__decorate([\n    core_1.Output(),\n    __metadata(\"design:type\", Object)\n], AccordionGroup.prototype, \"onToggle\", void 0);\n__decorate([\n    core_1.ContentChild(AccordionToggle_1.AccordionToggle),\n    __metadata(\"design:type\", core_1.ElementRef)\n], AccordionGroup.prototype, \"toggler\", void 0);\n__decorate([\n    core_1.Input(),\n    __metadata(\"design:type\", Boolean)\n], AccordionGroup.prototype, \"disabled\", void 0);\nAccordionGroup = __decorate([\n    core_1.Component({\n        selector: \"accordion-group\",\n        template: \"\\n  <div class=\\\"panel panel-default\\\" [class.dropup]=\\\"isOpened\\\" [class.disabled]=\\\"disabled\\\">\\n    <div class=\\\"panel-heading\\\" role=\\\"tab\\\" (click)=\\\"checkAndToggle()\\\">\\n      <h4 class=\\\"panel-title\\\">\\n        <a *ngIf=\\\"heading\\\" role=\\\"button\\\" data-toggle=\\\"collapse\\\" [attr.aria-expanded]=\\\"isOpened\\\">\\n            {{ heading }}\\n        </a>\\n        <ng-content select=\\\"accordion-heading\\\"></ng-content>\\n        <div class=\\\"caret\\\" [style.display]=\\\"accordion.showArrows ? '' : 'none'\\\">\\n        </div>\\n      </h4>\\n    </div>\\n    <div *ngIf=\\\"isOpened\\\" class=\\\"panel-collapse collapse in\\\" role=\\\"tabpanel\\\" [attr.aria-labelledby]=\\\"heading\\\">\\n      <div class=\\\"panel-body\\\">\\n        <ng-content></ng-content>\\n      </div>\\n    </div>\\n  </div>\\n\"\n    }),\n    __param(0, core_1.Host()), __param(0, core_1.Inject(core_1.forwardRef(function () { return Accordion_1.Accordion; })))\n], AccordionGroup);\nexports.AccordionGroup = AccordionGroup;\n",null]}