{"remainingRequest":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\catchError.js","dependencies":[{"path":"D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\catchError.js","mtime":499162500000},{"path":"D:\\AHLinesUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522837491125},{"path":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nexport function catchError(selector) {\r\n    return function catchErrorOperatorFunction(source) {\r\n        var operator = new CatchOperator(selector);\r\n        var caught = source.lift(operator);\r\n        return (operator.caught = caught);\r\n    };\r\n}\r\nvar CatchOperator = /*@__PURE__*/ (function () {\r\n    function CatchOperator(selector) {\r\n        this.selector = selector;\r\n    }\r\n    CatchOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\r\n    };\r\n    return CatchOperator;\r\n}());\r\nvar CatchSubscriber = (function (_super) {\r\n    tslib_1.__extends(CatchSubscriber, _super);\r\n    function CatchSubscriber(destination, selector, caught) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.selector = selector;\r\n        _this.caught = caught;\r\n        return _this;\r\n    }\r\n    CatchSubscriber.prototype.error = function (err) {\r\n        if (!this.isStopped) {\r\n            var result = void 0;\r\n            try {\r\n                result = this.selector(err, this.caught);\r\n            }\r\n            catch (err2) {\r\n                _super.prototype.error.call(this, err2);\r\n                return;\r\n            }\r\n            this._unsubscribeAndRecycle();\r\n            this.add(subscribeToResult(this, result));\r\n        }\r\n    };\r\n    return CatchSubscriber;\r\n}(OuterSubscriber));\r\n//# sourceMappingURL=catchError.js.map\r\n",null]}