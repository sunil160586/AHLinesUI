{"remainingRequest":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\retry.js","dependencies":[{"path":"D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\retry.js","mtime":499162500000},{"path":"D:\\AHLinesUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522837491125},{"path":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { Subscriber } from '../Subscriber';\r\nexport function retry(count) {\r\n    if (count === void 0) {\r\n        count = -1;\r\n    }\r\n    return function (source) { return source.lift(new RetryOperator(count, source)); };\r\n}\r\nvar RetryOperator = /*@__PURE__*/ (function () {\r\n    function RetryOperator(count, source) {\r\n        this.count = count;\r\n        this.source = source;\r\n    }\r\n    RetryOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\r\n    };\r\n    return RetryOperator;\r\n}());\r\nvar RetrySubscriber = (function (_super) {\r\n    tslib_1.__extends(RetrySubscriber, _super);\r\n    function RetrySubscriber(destination, count, source) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.count = count;\r\n        _this.source = source;\r\n        return _this;\r\n    }\r\n    RetrySubscriber.prototype.error = function (err) {\r\n        if (!this.isStopped) {\r\n            var _a = this, source = _a.source, count = _a.count;\r\n            if (count === 0) {\r\n                return _super.prototype.error.call(this, err);\r\n            }\r\n            else if (count > -1) {\r\n                this.count = count - 1;\r\n            }\r\n            source.subscribe(this._unsubscribeAndRecycle());\r\n        }\r\n    };\r\n    return RetrySubscriber;\r\n}(Subscriber));\r\n//# sourceMappingURL=retry.js.map\r\n",null]}