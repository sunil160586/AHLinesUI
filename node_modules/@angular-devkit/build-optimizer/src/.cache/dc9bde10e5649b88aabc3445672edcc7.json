{"remainingRequest":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\onErrorResumeNext.js","dependencies":[{"path":"D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\onErrorResumeNext.js","mtime":499162500000},{"path":"D:\\AHLinesUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522837491125},{"path":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib,_observable_from,_util_isArray,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { from } from '../observable/from';\r\nimport { isArray } from '../util/isArray';\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nexport function onErrorResumeNext() {\r\n    var nextSources = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nextSources[_i] = arguments[_i];\r\n    }\r\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\r\n        nextSources = nextSources[0];\r\n    }\r\n    return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };\r\n}\r\nexport function onErrorResumeNextStatic() {\r\n    var nextSources = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        nextSources[_i] = arguments[_i];\r\n    }\r\n    var source = null;\r\n    if (nextSources.length === 1 && isArray(nextSources[0])) {\r\n        nextSources = nextSources[0];\r\n    }\r\n    source = nextSources.shift();\r\n    return from(source, null).lift(new OnErrorResumeNextOperator(nextSources));\r\n}\r\nvar OnErrorResumeNextOperator = /*@__PURE__*/ (function () {\r\n    function OnErrorResumeNextOperator(nextSources) {\r\n        this.nextSources = nextSources;\r\n    }\r\n    OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {\r\n        return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\r\n    };\r\n    return OnErrorResumeNextOperator;\r\n}());\r\nvar OnErrorResumeNextSubscriber = (function (_super) {\r\n    tslib_1.__extends(OnErrorResumeNextSubscriber, _super);\r\n    function OnErrorResumeNextSubscriber(destination, nextSources) {\r\n        var _this = _super.call(this, destination) || this;\r\n        _this.destination = destination;\r\n        _this.nextSources = nextSources;\r\n        return _this;\r\n    }\r\n    OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype._error = function (err) {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype._complete = function () {\r\n        this.subscribeToNextSource();\r\n    };\r\n    OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {\r\n        var next = this.nextSources.shift();\r\n        if (next) {\r\n            this.add(subscribeToResult(this, next));\r\n        }\r\n        else {\r\n            this.destination.complete();\r\n        }\r\n    };\r\n    return OnErrorResumeNextSubscriber;\r\n}(OuterSubscriber));\r\n//# sourceMappingURL=onErrorResumeNext.js.map\r\n",null]}