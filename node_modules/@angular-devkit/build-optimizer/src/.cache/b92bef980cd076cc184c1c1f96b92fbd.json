{"remainingRequest":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\takeUntil.js","dependencies":[{"path":"D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\operators\\takeUntil.js","mtime":499162500000},{"path":"D:\\AHLinesUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522837491125},{"path":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START tslib,_OuterSubscriber,_util_subscribeToResult PURE_IMPORTS_END */\r\nimport * as tslib_1 from \"tslib\";\r\nimport { OuterSubscriber } from '../OuterSubscriber';\r\nimport { subscribeToResult } from '../util/subscribeToResult';\r\nexport function takeUntil(notifier) {\r\n    return function (source) { return source.lift(new TakeUntilOperator(notifier)); };\r\n}\r\nvar TakeUntilOperator = /*@__PURE__*/ (function () {\r\n    function TakeUntilOperator(notifier) {\r\n        this.notifier = notifier;\r\n    }\r\n    TakeUntilOperator.prototype.call = function (subscriber, source) {\r\n        var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\r\n        var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);\r\n        if (notifierSubscription && !notifierSubscription.closed) {\r\n            takeUntilSubscriber.add(notifierSubscription);\r\n            return source.subscribe(takeUntilSubscriber);\r\n        }\r\n        return takeUntilSubscriber;\r\n    };\r\n    return TakeUntilOperator;\r\n}());\r\nvar TakeUntilSubscriber = (function (_super) {\r\n    tslib_1.__extends(TakeUntilSubscriber, _super);\r\n    function TakeUntilSubscriber(destination) {\r\n        return _super.call(this, destination) || this;\r\n    }\r\n    TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\r\n        this.complete();\r\n    };\r\n    TakeUntilSubscriber.prototype.notifyComplete = function () {\r\n    };\r\n    return TakeUntilSubscriber;\r\n}(OuterSubscriber));\r\n//# sourceMappingURL=takeUntil.js.map\r\n",null]}