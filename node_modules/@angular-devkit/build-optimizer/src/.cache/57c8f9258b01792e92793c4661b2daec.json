{"remainingRequest":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\Notification.js","dependencies":[{"path":"D:\\AHLinesUI\\node_modules\\rxjs\\_esm5\\internal\\Notification.js","mtime":499162500000},{"path":"D:\\AHLinesUI\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522837491125},{"path":"D:\\AHLinesUI\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START _observable_empty,_observable_of,_observable_throwError PURE_IMPORTS_END */\r\nimport { empty } from './observable/empty';\r\nimport { of } from './observable/of';\r\nimport { throwError } from './observable/throwError';\r\nvar Notification = /*@__PURE__*/ (function () {\r\n    function Notification(kind, value, error) {\r\n        this.kind = kind;\r\n        this.value = value;\r\n        this.error = error;\r\n        this.hasValue = kind === 'N';\r\n    }\r\n    Notification.prototype.observe = function (observer) {\r\n        switch (this.kind) {\r\n            case 'N':\r\n                return observer.next && observer.next(this.value);\r\n            case 'E':\r\n                return observer.error && observer.error(this.error);\r\n            case 'C':\r\n                return observer.complete && observer.complete();\r\n        }\r\n    };\r\n    Notification.prototype.do = function (next, error, complete) {\r\n        var kind = this.kind;\r\n        switch (kind) {\r\n            case 'N':\r\n                return next && next(this.value);\r\n            case 'E':\r\n                return error && error(this.error);\r\n            case 'C':\r\n                return complete && complete();\r\n        }\r\n    };\r\n    Notification.prototype.accept = function (nextOrObserver, error, complete) {\r\n        if (nextOrObserver && typeof nextOrObserver.next === 'function') {\r\n            return this.observe(nextOrObserver);\r\n        }\r\n        else {\r\n            return this.do(nextOrObserver, error, complete);\r\n        }\r\n    };\r\n    Notification.prototype.toObservable = function () {\r\n        var kind = this.kind;\r\n        switch (kind) {\r\n            case 'N':\r\n                return of(this.value);\r\n            case 'E':\r\n                return throwError(this.error);\r\n            case 'C':\r\n                return empty();\r\n        }\r\n        throw new Error('unexpected notification kind value');\r\n    };\r\n    Notification.createNext = function (value) {\r\n        if (typeof value !== 'undefined') {\r\n            return new Notification('N', value);\r\n        }\r\n        return Notification.undefinedValueNotification;\r\n    };\r\n    Notification.createError = function (err) {\r\n        return new Notification('E', undefined, err);\r\n    };\r\n    Notification.createComplete = function () {\r\n        return Notification.completeNotification;\r\n    };\r\n    Notification.completeNotification = new Notification('C');\r\n    Notification.undefinedValueNotification = new Notification('N', undefined);\r\n    return Notification;\r\n}());\r\nexport { Notification };\r\n//# sourceMappingURL=Notification.js.map\r\n",null]}